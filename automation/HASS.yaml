- alias: HASS - Update Available Notification
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.online_version
  condition:
    - condition: template
      value_template: '{{states("sensor.online_version") != states("sensor.current_version") }}'
  action:
    - service: notify.gmaillolo
      data_template:
        title: "HA - Update Available"
        message: 'There is an update to Home-Assistant: {{states("sensor.online_version")}} (https://www.home-assistant.io/latest-release-notes/)'

- alias: HASS - New Docker Available Notification
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.docker_version
  condition:
    - condition: template
      value_template: '{{states("sensor.docker_version") != states("sensor.current_version") }}'
  action:
    - service: notify.gmaillolo
      data_template:
        title: "HA - Docker Update Available"
        message: 'The {{states("sensor.docker_version")}} Docker Image is now available'

- alias: HASS - Start Sound
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
  - service: media_player.play_media
    data:
      entity_id: media_player.google_home_minis
      media_content_id: 'http://192.168.0.24:8123/local/sounds/Click.mp3'
      media_content_type: 'audio/mp4'

- alias: HASS - Start RadioStream Scrape
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
  - service: shell_command.stop_radiostream_sensors
  - delay: 00:00:02
  - service: shell_command.start_radiostream_sensors

- alias: HASS - Start Install Catt
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
  - service: shell_command.catt_install

- alias: HASS - Stop Motion Detection
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
  - service: switch.turn_off
    entity_id: switch.dafang_living_room_status
  - service: switch.turn_off
    entity_id: switch.dafang_kitchen_status
  - service: switch.turn_off
    entity_id: switch.cctv_conservatory_status
  - service: switch.turn_off
    entity_id: switch.cctv_staircase_status

- alias: HASS - Nightly Restart
  initial_state: true
  trigger:
    platform: time_pattern
    hours: "4"
    minutes: 0
    seconds: 0
  action:
  - service: mqtt.publish
    data:
      topic: "Kitchen/DaFang/reboot/set"
      payload_template: 'ON'
      retain: false
  - service: mqtt.publish
    data:
      topic: "LivingRoom/DaFang/reboot/set"
      payload_template: 'ON'
      retain: false
  - service: mqtt.publish
    data:
      topic: "Conservatory/DaFang/reboot/set"
      payload_template: 'ON'
      retain: false
  - service: input_boolean.turn_on
    entity_id: input_boolean.normal
  - service: automation.trigger
    entity_id: automation.lights_all_lights_off
  - service: shell_command.refresh_bin_collection

- alias: HASS - SSL expiry notification
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states("sensor.ssl_cert_expiry") | int < 21 and states("sensor.ssl_cert_expiry") != "unavailable"}}'
  action:
    service: notify.gmaillolo
    data:
      title: "HA - SSL Expiry"
      message: 'Warning - SSL certificate expires in <21 days and has not been automatically renewed'


- alias: HASS - ZigBee2MQTT Docker Down
  initial_state: true
  trigger:
    - platform: state
      entity_id: switch.zigbee2mqtt
      to: 'off'
      for:
        minutes: 2
  action:
    service: notify.gmaillolo
    data:
      title: "HA - ZigBee2MQTT Docker Down"
      message: 'Warning - ZigBee2MQTT Docker Container Is Down'



- alias: HASS - Start Xmas Setup
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
    - condition: template
      value_template: '{{ (as_timestamp(now()) -(state_attr("input_datetime.xmas_start", "timestamp") | default(0)) | int > 0)}}'
    - condition: template
      value_template: '{{ ((state_attr("input_datetime.xmas_end", "timestamp") | default(0)) | int ) - as_timestamp(now()) >0 }}'
    - condition: state
      entity_id: input_boolean.xmas
      state: 'off'
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.silent
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.xmas
    - delay: 00:00:05
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.silent


- alias: HASS - Failed Login Attempt Notification
  initial_state: true
  trigger:
    - platform: state
      entity_id: persistent_notification.http_login
      to: 'notifying'
  action:
    - service: notify.gmaillolo
      data_template:
        title: "HA - Login Alert"
        message: >
          Login Attempt Failed: 
          http://www.ip-tracker.org/locator/ip-lookup.php?ip={{ state_attr("persistent_notification.http_login", "message").split ("from ") [1]}}


- alias: HASS - hasspodcast Update Available
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.ha_podcast_track
  condition:
    - condition: template
      value_template: '{{states("sensor.ha_podcast_track") != "unavailable" }}'
  action:
    - service: notify.gmaillolo
      data_template:
        title: "HA - HassPodcast Update"
        message: >
          There is a new hass podcast: {{ states("sensor.ha_podcast_track")}}

- id: HASS - update_networkmap
  alias: 'Zigbee Network Map Update'  
  initial_state: true
  trigger:
    platform: time_pattern
    minutes: '/10'
    seconds: 00
  action:
    service: zigbee2mqtt_networkmap.update

- alias: HASS - HACS Notification Of Pending updates
  trigger:
    platform: state
    entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: "{{ states(trigger.entity_id) != 'unknown'}}"
    - condition: template
      value_template: "{{ (states(trigger.entity_id) | float) != 0}}"
  action:
    service: persistent_notification.create
    data_template:
      title: Updates pending in HACS
      message: >-
        {% for repo in state_attr(trigger.entity_id, 'repositories') %}
          **{{ repo.display_name }}** _{{ repo["installed_version"] }}_ -> _{{ repo["available_version"] }}_
        {% endfor %}

- alias: HASS - Set Theme
  initial_state: true
  trigger:
    - platform: state
      entity_id: sun.sun
      to:
        - "above_horizon"
        - "below_horizon"
    - platform: homeassistant
      event: start
  action:
    - entity_id: input_boolean.theme_dark
      service: >
        {% if states("sun.sun") == "above_horizon" %}
          input_boolean.turn_off
        {% else %}
          input_boolean.turn_on
        {% endif %}
    - service: frontend.set_theme
      data_template:
        name: >
          {% if states("sun.sun") == "above_horizon" %}
            day
          {% else %}
            dark
          {% endif %}