- alias: BMW - Windows/Doors left open
  initial_state: true
  trigger:
    - platform: state
      entity_id: lock.220d_lock
      to: 'locked'
  # condition:
    # - condition: template
      # value_template: '{{ states("device_tracker.220d") != "not_home"}}'
  action:
    - service: bmw_connected_drive.update_state
    - wait_template: '{{(as_timestamp(now()) - as_timestamp(states.device_tracker["220d"].last_updated | default(0)) | int > 300 )}}'
      timeout: '00:06:00'
      continue_on_timeout: true
    - condition: template
      value_template: >
        {%- set doors = [
              states.binary_sensor.bmw_220d_windowdriverdront,
              states.binary_sensor.bmw_220d_windowdriverrear,
              states.binary_sensor.bmw_220d_windowpassengerfront,
              states.binary_sensor.bmw_220d_windowpassengerrear,
              states.binary_sensor.bmw_220d_doordriverdront,
              states.binary_sensor.bmw_220d_doordriverrear,
              states.binary_sensor.bmw_220d_doorpassengerfront,
              states.binary_sensor.bmw_220d_doorpassengerrear,
              states.binary_sensor.bmw_220d_hood,
              states.binary_sensor.bmw_220d_trunk] -%}
        {%- set doors_on = doors | selectattr('state','eq','on') | list -%}
        {{ ((doors_on | length) | int ) >= 1}}
    - service: notify.gmaillolo
      data_template:
        title: "HA - BMW"
        message: >
          The following BMW doors/windows are not closed: 
          {% set doors = [
                states.binary_sensor.bmw_220d_windowdriverdront,
                states.binary_sensor.bmw_220d_windowdriverrear,
                states.binary_sensor.bmw_220d_windowpassengerfront,
                states.binary_sensor.bmw_220d_windowpassengerrear,
                states.binary_sensor.bmw_220d_doordriverdront,
                states.binary_sensor.bmw_220d_doordriverrear,
                states.binary_sensor.bmw_220d_doorpassengerfront,
                states.binary_sensor.bmw_220d_doorpassengerrear,
                states.binary_sensor.bmw_220d_hood,
                states.binary_sensor.bmw_220d_trunk] -%}
          {%- set doors_on = doors | selectattr('state','eq','on') | list -%}
          {% for door_names in doors_on -%}
          {{(door_names | string).split("friendly_name=")[1].split(",")[0]}}, 
          {%- endfor %}

- alias: BMW - iOS Notification Car Unlocked
  initial_state: true
  trigger:
    - platform: state
      entity_id: lock.220d_lock
      to: 'unlocked'
  action:
    - service: bmw_connected_drive.update_state
    - wait_template: '{{(as_timestamp(now()) - as_timestamp(states.device_tracker["220d"].last_updated | default(0)) | int > 300 )}}'
      timeout: '00:06:00'
      continue_on_timeout: true
    - condition: template
      value_template: '{{ states("device_tracker.laurent") != "driving"}}'
    - service: notify.mobile_app_lolo_s_iphone
      data_template:
        title: "HA - BMW"
        message: 'BMW 220d Not Locked !'
        data:
          push:
            badge: '{{states("counter.iosbadgecount")}}'
            category: "bmwalert"
          action_data:
            entity_id: lock.220d_lock

- alias: BMW - iOS Notification Lock Car
  initial_state: true
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: LOCK_BMW
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: LOCK_BMW
  action:
    - service: lock.lock
      data:
        entity_id: lock.220d_lock

- alias: BMW - Ventilate the car from iOS Notification
  initial_state: true
  trigger:
    # iOS 2.0 App Support
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: BMW_VENTILATE
  action:
    - service: bmw_connected_drive.activate_air_conditioning
      data:
        vin: !secret bmw_connected_drive_vin



- alias: BMW - Ventilate When Temp Above 20
  initial_state: true
  trigger:
    - platform: time_pattern
      hours: "16"
      minutes: 0
      seconds: 0
    - platform: time_pattern
      hours: "17"
      minutes: 25
      seconds: 0
  condition:
    - condition: state
      entity_id: 'input_boolean.holidays'
      state: "off"
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "on"
    - condition: template
      value_template: '{{states("sensor.dark_sky_temperature") | int >= 20}}'
    - condition: or
      conditions:
      - condition: template
        value_template: '{{now().hour == 17 and now().minute == 25 and states("device_tracker.220d") == "home" and states("person.laurent") == "home" and states("person.div") != "home" and (as_timestamp(now()) | timestamp_custom("%a") == "Fri" or as_timestamp(now()) | timestamp_custom("%a") == "Mon")}}'
      - condition: template
        value_template: '{{now().hour == 16 and now().minute == 0 and states("device_tracker.220d") == "verint" and (as_timestamp(now()) | timestamp_custom("%a") == "Tue" or as_timestamp(now()) | timestamp_custom("%a") == "Wed" or as_timestamp(now()) | timestamp_custom("%a") == "Thu")}}'
  action:
    - service: bmw_connected_drive.activate_air_conditioning
      data:
        vin: !secret bmw_connected_drive_vin