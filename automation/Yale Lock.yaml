- alias: Yale - Unlock when reaching home from iOS Notification (W/O Alarm)
  id: yale_unlock_when_reaching_home_from_ios_notification_w_o_alarm
  initial_state: true
  trigger:
    - platform: state
      entity_id: device_tracker.laurent
      to: "home"
    - platform: state
      entity_id: device_tracker.divashni
      to: "home"
    - platform: template
      value_template: '{{ states("sensor.lolo_s_iphone_connection_type") == "Wi-Fi" and states("device_tracker.laurent") != "home" and distance(states.device_tracker.laurent) < 0.5 }}'
    - platform: template
      value_template: '{{ states("sensor.div_iphone_connection_type") == "Wi-Fi" and states("device_tracker.divashni") != "home" and distance(states.device_tracker.divashni) < 0.5 }}'
  condition:
    - condition: template
      value_template: '{{ states("alarm_control_panel.alarm") == "disarmed" }}'
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(state_attr("automation.alarm_disarm_alarm_when_reaching_home_from_ios_notification", "last_triggered") | default(0)) | int > 60)}}'
  action:
    - service: '{% if trigger.entity_id == "device_tracker.laurent" %}notify.mobile_app_lolo_s_iphone{% else %}notify.mobile_app_div_iphone{% endif %}'
      data_template:
        message: 'Unlock Porch ?'
        data:
          push:
            badge: '{{states("counter.iosbadgecount")}}'
            category: 'unlockyale'
          action_data:
            entity_id: lock.yale_conexis_l1_lock

- alias: Yale - Unlock when reaching home from iOS Notification (W Alarm)
  id: yale_unlock_when_reaching_home_from_ios_notification_w_alarm
  initial_state: true
  trigger:
    - platform: state
      entity_id: device_tracker.laurent
      to: "home"
    - platform: state
      entity_id: device_tracker.divashni
      to: "home"
    - platform: template
      value_template: '{{ states("sensor.lolo_s_iphone_connection_type") == "Wi-Fi" and states("device_tracker.laurent") != "home" and distance(states.device_tracker.laurent) < 0.5 }}'
    - platform: template
      value_template: '{{ states("sensor.div_iphone_connection_type") == "Wi-Fi" and states("device_tracker.divashni") != "home" and distance(states.device_tracker.divashni) < 0.5 }}'
  condition:
    - condition: template
      value_template: '{{ states("alarm_control_panel.alarm") != "disarmed" }}'
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(state_attr("automation.alarm_disarm_alarm_when_reaching_home_from_ios_notification", "last_triggered") | default(0)) | int > 60)}}'
  action:
    - service: '{% if trigger.entity_id == "device_tracker.laurent" %}notify.mobile_app_lolo_s_iphone{% else %}notify.mobile_app_div_iphone{% endif %}'
      data_template:
        message: 'Unlock Porch & Disarm Alarm ?'
        data:
          push:
            badge: '{{states("counter.iosbadgecount")}}'
            category: 'unlockyaledisarmalarm'
          action_data:
            entity_id: alarm_control_panel.alarm

- alias: Yale - Unlock & Disarm Alarm from iOS Notification
  id: yale_unlock_disarm_alarm_from_ios_notification
  initial_state: true
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: UNLOCK_YALE_DISARM_ALARM
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: UNLOCK_YALE_DISARM_ALARM
  condition:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_boolean.normal
        state: 'on'
      - condition: state
        entity_id: input_boolean.holidays
        state: 'on'
  action:
    - service: lock.unlock
      data:
        entity_id: lock.yale_conexis_l1_lock
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alarm
      data:
        code: !secret alarm_code
    # - condition: state
    #   entity_id: sensor.conexis_l1_node_status
    #   state: 'dead'
    # - service: zwave_js.refresh_value
    #   data:
    #     entity_id: lock.yale_conexis_l1_lock
    #     refresh_all_values: true
    # - wait_template: "{{ is_state('lock.yale_conexis_l1_lock', 'alive') }}"
    #   timeout: '00:00:30'
    #   continue_on_timeout: true
    # - service: lock.unlock
    #   data:
    #     entity_id: lock.yale_conexis_l1_lock

- alias: Yale - Unlock Lock from iOS Notification
  id: yale_unlock_lock_from_ios_notification
  initial_state: true
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: UNLOCK_YALE
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: UNLOCK_YALE
  condition:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_boolean.normal
        state: 'on'
      - condition: state
        entity_id: input_boolean.holidays
        state: 'on'
  action:
    - service: lock.unlock
      data:
        entity_id: lock.yale_conexis_l1_lock
    # - condition: state
    #   entity_id: sensor.conexis_l1_node_status
    #   state: 'dead'
    # - service: zwave_js.refresh_value
    #   data:
    #     entity_id: lock.yale_conexis_l1_lock
    #     refresh_all_values: true
    # - wait_template: "{{ is_state('lock.yale_conexis_l1_lock', 'alive') }}"
    #   timeout: '00:00:30'
    #   continue_on_timeout: true
    # - service: lock.unlock
    #   data:
    #     entity_id: lock.yale_conexis_l1_lock


- alias: Yale - Door Left Unlocked
  id: yale_door_left_unlocked
  initial_state: true
  trigger:
    - platform: state
      entity_id: lock.yale_conexis_l1_lock
      to: 'unlocked'
      for:
        minutes: 5
    - platform: state
      entity_id: binary_sensor.main_door
      to: 'off'
  action:
    - delay: '00:05:00'
    - condition: state
      entity_id: binary_sensor.main_door
      state: 'off'
    # - service: zwave_js.refresh_value
    #   data:
    #     entity_id: lock.yale_conexis_l1_lock
    #     refresh_all_values: true
    # - wait_template: "{{ is_state('sensor.conexis_l1_node_status', 'alive') }}"
    #   timeout: '00:00:30'
    #   continue_on_timeout: true
    - service: zwave.refresh_node
      data:
        node_id: 5
    - wait_template: "{{ is_state('zwave.conexis_l1_node_status', 'ready') }}"
      timeout: '00:00:30'
      continue_on_timeout: true
    - wait_template: "{{ states('lock.yale_conexis_l1_lock') == 'locked' }}"
      timeout: '00:00:30'
      continue_on_timeout: true
    - condition: template
      value_template: '{{ states("lock.yale_conexis_l1_lock") != "locked" and states("lock.yale_conexis_l1_lock") != "unavailable" }}'
    - condition: state
      entity_id: binary_sensor.main_door
      state: 'off'
    - service: notify.mobile_app_lolo_s_iphone
      data_template:
        message: 'Porch Door Left Unlocked'
        data:
          push:
            badge: '{{states("counter.iosbadgecount")}}'
            category: 'alert'
          action_data:
            entity_id: '{{trigger.entity_id}}'
    # - service: notify.mobile_app_div_iphone
    #   data_template:
    #     message: 'Porch Door Left Unlocked'
    #     data:
    #       push:
    #         badge: '{{states("counter.iosbadgecount")}}'
    #         category: 'alert'
    #       action_data:
    #         entity_id: '{{trigger.entity_id}}'
    # - condition: state
    #   entity_id: input_boolean.silent
    #   state: 'off'
    # - service: tts.google_say
    #   entity_id: media_player.google_home_minis
    #   data_template:
    #     message: 'Please note: the porch door has been left unlocked'


- alias: Yale - Lock Jammed
  id: yale_lock_jammed
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.porch_door_lock_status
      to: 'Jammed'
      for:
        minutes: 1
  action:
    # - service: zwave_js.refresh_value
    #   data:
    #     entity_id: lock.yale_conexis_l1_lock
    #     refresh_all_values: true
    # - wait_template: "{{ is_state('sensor.conexis_l1_node_status', 'alive') }}"
    #   timeout: '00:00:30'
    #   continue_on_timeout: true
    - service: zwave.refresh_node
      data:
        node_id: 5
    - wait_template: "{{ is_state('zwave.conexis_l1_node_status', 'ready') }}"
      timeout: '00:00:30'
      continue_on_timeout: true
    - wait_template: '{{ states("sensor.porch_door_lock_status") != "Jammed" and states("lock.yale_conexis_l1_lock") != "unavailable"}}'
      timeout: '00:00:30'
      continue_on_timeout: true
    - service: notify.mobile_app_lolo_s_iphone
      data_template:
        message: 'Porch Door Lock Jammed'
        data:
          push:
            badge: '{{states("counter.iosbadgecount")}}'
            category: 'alert'
          action_data:
            entity_id: '{{trigger.entity_id}}'
    - service: notify.mobile_app_div_iphone
      data_template:
        message: 'Porch Door Lock Jammed'
        data:
          push:
            badge: '{{states("counter.iosbadgecount")}}'
            category: 'alert'
          action_data:
            entity_id: '{{trigger.entity_id}}'
    - service: notify.gmaillolo
      data_template:
        title: "HA - Porch Door Lock Jammed"
        message: >
          Please note: the porch door lock is jammed
    - condition: state
      entity_id: input_boolean.silent
      state: 'off'
    - service: tts.google_say
      entity_id: media_player.google_home_minis
      data_template:
        message: 'Please note: the porch door lock is jammed'

- alias: Yale - Battery below 10%
  id: yale_battery_below_10
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.yale_conexis_l1_low_battery_level
      to: 'on'
  action:
    - service: notify.mobile_app_lolo_s_iphone
      data_template:
        message: 'Yale Lock Battery Low !'
        data:
          push:
            badge: '{{states("counter.iosbadgecount")}}'
            category: 'alert'
          action_data:
            entity_id: '{{trigger.entity_id}}'
    - service: notify.gmaillolo
      data_template:
        title: 'HA - Yale Lock Battery Low'
        message: 'The Battery on the Yale Lock is low ({{ states("sensor.yale_conexis_l1_battery_level") | int}}%)'

- alias: Yale - Unlock when Opening Main Door From Inside
  id: yale_unlock_when_opening_main_door_from_inside
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.main_door
      to: 'on'
  condition:
    - condition: template
      value_template: '{{ states("group.pirs") == "on" }}'
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.lock.yale_conexis_l1_lock.last_changed) | int > 120)}}'
    - condition: or
      conditions:
      - condition: state
        entity_id: input_boolean.normal
        state: 'on'
      - condition: state
        entity_id: input_boolean.holidays
        state: 'on'
  action:
    - service: lock.unlock
      data:
        entity_id: lock.yale_conexis_l1_lock
    - condition: state
      entity_id: sensor.conexis_l1_node_status
      state: 'dead'
    - service: zwave_js.refresh_value
      data:
        entity_id: lock.yale_conexis_l1_lock
        refresh_all_values: true
    - wait_template: "{{ is_state('lock.yale_conexis_l1_lock', 'alive') }}"
      timeout: '00:00:30'
      continue_on_timeout: true
    - service: lock.unlock
      data:
        entity_id: lock.yale_conexis_l1_lock


- alias: Yale - Refresh Values on Becoming Dead
  id: yale_refresh_values_on_becoming_dead
  initial_state: true
  trigger:
    - platform: state
      # entity_id: sensor.conexis_l1_node_status
      # to: 'dead'
      entity_id: zwave.conexis_l1_node_status
      to: 'dead'
      for:
        minutes: 1
  condition:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(this.last_triggered) | int > 30)}}'
  action:
    # - service: zwave_js.refresh_value
    #   data:
    #     entity_id: lock.yale_conexis_l1_lock
    #     refresh_all_values: true
    - service: zwave.test_node
      data:
        node_id: 5
    - delay: '00:02:00'
    # - condition: template
    #   value_template: '{{ states("lock.yale_conexis_l1_lock") != "unavailable" }}' 
    - condition: template
      value_template: '{{ states("zwave.conexis_l1_node_status") == "dead" }}' 
    - service: notify.gmaillolo
      data_template:
        title: 'HA - Yale Lock Dead'
        message: 'Yale Lock Dead since {{ as_timestamp(states.lock.yale_conexis_l1_lock.last_updated) | timestamp_custom("%H:%M")}}'


# - alias: Yale - Event
#   trigger:
#     platform: event
#     event_type: zwave_js_notification
#   action:
#     - service: notify.gmaillolo
#       data_template:
#         title: 'HA - Yale Event'
#         message: 'Event:  {{ trigger.event.data}}'